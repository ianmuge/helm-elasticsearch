apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Values.configMap.name }}-deployment-config
  namespace: kube-system
  labels:
    k8s-app: {{ $.Values.app.name }}
data:
  metricbeat.yml: |-
    metricbeat.config.modules:
      # Mounted `metricbeat-daemonset-modules` configmap:
      path: ${path.config}/modules.d/*.yml
      # Reload module configs as they change:
      reload.enabled: false
    
    processors:
      - add_cloud_metadata:
      - add_host_metadata:
      - add_kubernetes_metadata:
      - add_docker_metadata:
    setup.kibana.host: "http://{{$.Values.global.svc.kibana.name}}.{{$.Values.global.namespace}}.svc.cluster.local:{{$.Values.global.svc.kibana.port}}"
    setup.dashboards.enabled: true
    # setup.dashboards.index: "metricbeat-*"
    output.elasticsearch.hosts: ['{{$.Values.global.svc.elasticsearch.name}}.{{$.Values.global.namespace}}.svc.cluster.local:{{$.Values.global.svc.elasticsearch.port}}']
  
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Values.configMap.name }}-deployment-modules
  namespace: kube-system
  labels:
    k8s-app: {{ $.Values.app.name }}
data:
  # This module requires `kube-state-metrics` up and running under `kube-system` namespace
  kubernetes.yml: |-
    - module: kubernetes
      metricsets:
        - state_node
        - state_deployment
        - state_replicaset
        - state_pod
        - state_container
        - state_cronjob
        - state_resourcequota
        # Uncomment this to get k8s events:
        - event
      period: 10s
      host: ${NODE_NAME}
      hosts: ["kube-state-metrics:8080"]
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Values.configMap.name }}-daemonset-config
  namespace: kube-system
  labels:
    k8s-app: {{ $.Values.app.name }}
data:
  metricbeat.yml: |-
    metricbeat.config.modules:
      # Mounted `metricbeat-daemonset-modules` configmap:
      path: ${path.config}/modules.d/*.yml
      # Reload module configs as they change:
      reload.enabled: false
    # To enable hints based autodiscover uncomment this:
    metricbeat.autodiscover:
     providers:
       - type: kubernetes
         node: ${NODE_NAME}
         hints.enabled: true
    processors:
      - add_cloud_metadata:
      - add_host_metadata:
      - add_kubernetes_metadata:
      - add_docker_metadata:
    setup.kibana.host: "http://{{$.Values.global.svc.kibana.name}}.{{$.Values.global.namespace}}.svc.cluster.local:{{$.Values.global.svc.kibana.port}}"
    setup.dashboards.enabled: true
    # setup.dashboards.index: "metricbeat-*"
    output.elasticsearch.hosts: ['{{$.Values.global.svc.elasticsearch.name}}.{{$.Values.global.namespace}}.svc.cluster.local:{{$.Values.global.svc.elasticsearch.port}}']
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $.Values.configMap.name }}-daemonset-modules
  namespace: kube-system
  labels:
    k8s-app: {{ $.Values.app.name }}
data:
  system.yml: |-
    - module: system
      period: 10s
      metricsets:
        - cpu
        - load
        - memory
        - network
        - process
        - process_summary
        - core
        - diskio
        # - socket
      processes: ['.*']
      process.include_top_n:
        by_cpu: 5      # include top 5 processes by CPU
        by_memory: 5   # include top 5 processes by memory
    - module: system
      period: 1m
      metricsets:
        - filesystem
        - fsstat
      processors:
      - drop_event.when.regexp:
          system.filesystem.mount_point: '^/(sys|cgroup|proc|dev|etc|host|lib)($|/)'
  kubernetes.yml: |-
    - module: kubernetes
      metricsets:
        - node
        - system
        - pod
        - container
        - volume
      period: 10s
      host: ${NODE_NAME}
      hosts: ["localhost:10255"]
    - module: kubernetes
      metricsets:
        - proxy
      period: 10s
      host: ${NODE_NAME}
      hosts: ["localhost:10249"]
  docker.yml: |-
    - module: docker
      metricsets:
        - "container"
        - "cpu"
        - "diskio"
        - "event"
        - "healthcheck"
        - "info"
        # - "image"
        - "memory"
        - "network"
      hosts: ["unix:///var/run/docker.sock"]
      period: 10s
      enabled: true