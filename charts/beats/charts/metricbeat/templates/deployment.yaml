---
# Deploy singleton instance in the whole cluster for some unique data sources, like kube-state-metrics
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $.Values.deployment.name }}
  namespace: kube-system
  labels:
    k8s-app: {{ $.Values.app.name }}
spec:
  selector:
    matchLabels:
      k8s-app: {{ $.Values.app.name }}
  template:
    metadata:
      labels:
        k8s-app: {{ $.Values.app.name }}
    spec:
      serviceAccountName: {{ $.Values.serviceAccount.name }}
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      containers:
      - name: {{ $.Values.deployment.name }}
        image: {{ $.Values.deployment.image.repository }}:{{ $.Values.deployment.image.tag }}
        args: [
          "-c", "/etc/metricbeat.yml",
          "-e",
        ]
        env:
        - name: ELASTICSEARCH_HOST
          value: '{{$.Values.global.svc.elasticsearch.name}}.{{$.Values.global.namespace}}.svc.cluster.local'
        - name: ELASTICSEARCH_PORT
          value: "{{$.Values.global.svc.elasticsearch.port}}"
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        securityContext:
          runAsUser: 0
        resources:
          limits:
            cpu: 500m
            memory: 200Mi
          requests:
            cpu: 50m
            memory: 100Mi
        volumeMounts:
        - name: config
          mountPath: /etc/metricbeat.yml
          readOnly: true
          subPath: metricbeat.yml
        - name: modules
          mountPath: /usr/share/metricbeat/modules.d
          readOnly: true
      volumes:
      - name: config
        configMap:
          defaultMode: 0600
          name: {{ $.Values.configMap.name }}-deployment-config
      - name: modules
        configMap:
          defaultMode: 0600
          name: {{ $.Values.configMap.name }}-deployment-modules